WITH A AS (
    SELECT 
        cid_num, crs_cust_ig, obs_month,
		sum(exposure) over (partition by cid_num, obs_month) as total_exposure,
        case
            when crs_cust_ig between 65 and 75 then '65-75' 
            when crs_cust_ig between 77 and 80 then '77-80'
            when crs_cust_ig between 83 and 85 then '83-85'
            else 'Other' 					  	
		end as IG_Bucket,

		-- use lag to access ig bucket for previous obs_month (1 prior)
        LAG(crs_cust_ig,1) over (partition by cid_num order by obs_month) AS Prev_crs_cust_ig,
        LAG(									   
            case
                when crs_cust_ig between 65 and 75 then '65-75' 
				when crs_cust_ig between 77 and 80 then '77-80'
				when crs_cust_ig between 83 and 85 then '83-85'
				when crs_cust_ig is NULL then NULL
				else 'Other' 
            end
        ,1) over (partition by cid_num order by obs_month) as Prev_IG_Bucket

    from 
	( 
	with c as (
	SELECT cid_num, MIN(crs_cust_ig) AS crs_cust_ig, obs_month, sum(exposure) AS exposure
	FROM [GRMSMB].[LNDZ].[can_sb_all]
	where crs_cust_ig is not null 
	and crs_cust_ig not in (1,0)
	GROUP BY cid_num, obs_month, obs_quarter  ),
	B AS (
	select obs_quarter, max(obs_month) as obs_month 
	from [GRMSMB].[LNDZ].[can_sb_all] where obs_date >= dateadd(year,-2, cast(getdate() as date))
	group by obs_quarter
	)
	select c.* from c inner join b on c.obs_month = b.obs_month
    
	) TEMP
)


select 
    A.cid_num, A.crs_cust_ig, A.Prev_crs_cust_ig, A.Prev_IG_Bucket, A.IG_Bucket,  
	A.obs_month, A.total_exposure, B.obs_quarter,
    case		 
        when A.Prev_IG_Bucket IS NULL then 'New'	
		-- if they have different ig buckets (now and previous)
        when A.IG_Bucket <> A.Prev_IG_Bucket then 
        case
            when A.crs_cust_ig > Prev_crs_cust_ig then 'Upgrade' 		   
            else 'Downgrade' 
        end
		-- if same ig buckets between 2 Months
        when A.IG_Bucket = A.Prev_IG_Bucket then 
        case
            when A.crs_cust_ig > Prev_crs_cust_ig then 'Slight Upgrade' 
            when A.crs_cust_ig < Prev_crs_cust_ig then 'Slight Downgrade' 
            else 'Same' 
        end	
    end	as IG_Migration
													 
from A inner join B 
on A.obs_month = B.obs_month
where A.IG_Bucket <> 'Other' and A.Prev_IG_Bucket <> 'Other'   
